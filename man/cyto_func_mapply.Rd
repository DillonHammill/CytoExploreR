% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cyto_function-helpers.R
\name{cyto_func_mapply}
\alias{cyto_func_mapply}
\title{Apply a function iteratively over a list of arguments}
\usage{
cyto_func_mapply(
  FUN,
  args,
  MoreArgs = NULL,
  SIMPLIFY = TRUE,
  USE.NAMES = TRUE,
  INDEX = NULL
)
}
\arguments{
\item{FUN}{name of the function to apply, passed to \code{cyto_func_match()}
to obtain a valid function.}

\item{args}{a named list of arguments over which \code{FUN} is to be
iteratively applied.}

\item{MoreArgs}{additional arguments passed to \code{FUN} that should not be
iterated over.}

\item{SIMPLIFY}{passed to \code{mapply()} to determine the output format
after each function call, set to TRUE by default.}

\item{USE.NAMES}{passed to \code{mapply()} to control whether names should be
retained in the output of each functin call, set to TRUE by default.}

\item{INDEX}{integers to indicate the set of arguments in \code{args} over
which \code{FUN} should be applied, set to NULL by default to iterate over
all arguments.}
}
\value{
output of the specified function called iteratively over the list of
  arguments.
}
\description{
\code{cyto_func_mapply()} is a convenient wrapper around
\code{cyto_func_match()} and \code{mapply()} with the addition of an
\code{INDEX} argument to apply the function over a subset of the arguments.
}
\examples{
a <- c(1, 2, 3)
b <- c(1, 2, 3)
c <- c(1, 2, 3)

add_nums <- function(a, b, c){
  a + b + c
}

cyto_func_mapply(
  "add_nums",
  list(a = a, b = b, c = c)
)

cyto_func_mapply(
  "add_nums",
  list(a = a, b = b, c = c),
  INDEX = 2
)

}
\author{
Dillon Hammill (Dillon.Hammill@anu.edu.au)
}
