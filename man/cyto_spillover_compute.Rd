% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cyto_spillover_compute.R
\name{cyto_spillover_compute}
\alias{cyto_spillover_compute}
\title{Compute Spillover Matrix}
\usage{
cyto_spillover_compute(
  x,
  parent = "root",
  select = NULL,
  channels = NULL,
  type = "roca",
  save_as = NULL,
  gatingTemplate = NULL,
  axes_trans = NA,
  axes_limits = "machine",
  spillover = NULL,
  heatmap = TRUE,
  events = 500,
  iter = 100,
  trim = 0.001,
  ...
)
}
\arguments{
\item{x}{object of class \code{\link[flowCore:flowSet-class]{flowSet}} or
\code{\link[flowWorkspace:GatingSet-class]{GatingSet}} containing
transformed and gated compensation controls.}

\item{parent}{name of the population to use for the spillover calculation
when a GatingSet object is supplied, set to the last node of the GatingSet
by default (e.g. "Single Cells"). For greater flexibility, users can
specify a parent population for each control, which will be extracted for
the spillover calculation (e.g. Lymphocytes for CD4 APC or Myeloid Cells
for CD11b FITC). The parent populations for each control can also be
specified in a \code{parent} column in the channel match CSV file or in
\code{cyto_details}.}

\item{select}{passed to \code{\link{cyto_select}} to select the samples
required to compute the spillover matrix.}

\item{channels}{names of the channels or markers for which spillover
coefficients should be computed, set to all area fluorescent channels by
default.}

\item{type}{options include \code{"Bagwell"}, \code{"Roca"} or
\code{"hybrid"} to indicate which method to use when computing the
spillover matrix, set to \code{"Roca"} by default. The \code{"hybrid"}
method computes the spillover coefficients using the \code{Bagwell}
approach (no RLM) and refines the coefficients using the \code{Autospill}
approach. Refer to \code{references} section for more details about each
method.}

\item{save_as}{name of a csv file to which the computed spillover matrix
should be written, set to \code{Spillover-Matrix.csv} prefixed with the
date by default.}

\item{gatingTemplate}{name of \code{gatingTemplate} csv file to which the
\code{gatingTemplate} entries for the \code{GatingSet} method should be
saved, set to \code{cyto_gatingTemplate_active()} by default.}

\item{axes_trans}{object of class
\code{\link[flowWorkspace:transformerList]{transformerList}} generated by a
\code{cyto_transformer} which contains the transformer definitions used to
transform the data. Transformer definitions are only required when a
flowSet object is supplied.}

\item{axes_limits}{options include \code{"auto"}, \code{"data"} or
\code{"machine"} to use optimised, data or machine limits respectively. Set
to \code{"machine"} by default to use entire axes ranges. Fine control over
axes limits can be obtained by altering the \code{xlim} and \code{ylim}
arguments.}

\item{spillover}{superseded by the \code{save_as} argument above, only
included for backwards compatibility with older versions of CytoExploreR.}

\item{heatmap}{logical indicating whether the computed spillover matrix
should be displayed in a heatmap, set to TRUE by default.}

\item{events}{number of events to extract from each control prior to fitting
RLM models, set to 500 events by default.}

\item{iter}{indicates the maximum number of allowable iterations for refining
the spillover coefficients, set to 100 by default.}

\item{trim}{proportion of events to exclude from the top and bottom of each
scale when fitting RLM models in autospill method, set to 0.001 by default.}

\item{...}{additional arguments passed to \code{\link{cyto_plot}}.}
}
\value{
spillover matrix and write spillover matrix to csv file named in
  accordance with \code{spillover}.
}
\description{
\code{cyto_spillover_compute} automatically computes the fluorescent
spillover matrix for a set of single colour compensation controls using
either the method proposed by Bagwell et al. (1993) or the more recent method
proposed by Roca et al. (2021).
}
\details{
The method proposed by Roca et al. (2021) is now the default method, and has
been implemented in \code{cyto_spillover_compute} as a fully automated
algorithm to compute the spillover matrix. Users simply need to ensure that
the channel associated with each control is annotated in the
\code{cyto_details()} of the supplied data.

The method proposed by Bagwell et al. (1993) is also supported but is
implemented as a semi-automated approach as it requires gating of the
positive and negative signal within each single colour control to accurately
compute the spillover coefficients. Gating is performed on a per channel
basis with the user manually drawing interval gates around the positive and
negative signal for each control. If a universal unstained control is
supplied, users are only asked to gate the positive signal for each control
and the unstained control will be used as the reference for the negative
signal in each channel.

The computed spillover is returned as a matrix and exported as a csv file
specified by the \code{save_as} argument. To assess the quality of the
compensation, refer to \code{\link{cyto_spillover_edit}} and
\code{\link{cyto_plot_compensation}}. Users can apply their computed
spillover matrices to their samples using \code{\link{cyto_compensate}}.
}
\examples{
\dontrun{
library(CytoExploreRData)

# Bypass directory check for external files
options("CytoExploreR_wd_check" = FALSE)

# Load in compensation controls
fs <- Compensation
gs <- GatingSet(Compensation)

# Gate using cyto_gate_draw
gt <- Compensation_gatingTemplate
cyto_gatingTemplate_apply(gs, gt)

# Channel match fille
cmfile <- system.file("extdata",
  "Compensation-Channels.csv",
  package = "CytoExploreRData"
)

# Compute fluorescent spillover matrix
spill <- cyto_spillover_compute(cyto_extract(gs, "Single Cells"),
  channel_match = cmfile,
  spillover = "Example-spillover.csv"
)

# Compensate samples
gs <- cyto_compensate(gs, spill)

# Return CytoExploreR_wd_check to default
options("CytoExploreR_wd_check" = TRUE)
}

}
\references{
C. B. Bagwell & E. G. Adams (1993). Fluorescence spectral overlap
  compensation for any number of flow cytometry parameters. in: Annals of the
  New York Academy of Sciences, 677:167-184.

Roca et al. (2021). AutoSpill is a principled framework that
  simplifies the analysis of multichromatic flow cytometry data. Nature
  Communications 12(2890).
}
\seealso{
\code{\link{cyto_channel_match}}

\code{\link{cyto_spillover_edit}}

\code{\link{cyto_plot_compensation}}

\code{\link{cyto_compensate}}
}
\author{
Dillon Hammill, \email{Dillon.Hammill@anu.edu.au}
}
