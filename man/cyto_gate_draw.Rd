% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cyto_gate_draw.R
\name{cyto_gate_draw}
\alias{cyto_gate_draw}
\title{cyto_gate_draw}
\usage{
cyto_gate_draw(x, ...)
}
\arguments{
\item{x}{object of class \code{\link[flowCore:flowFrame-class]{flowFrame}},
\code{\link[flowCore:flowSet-class]{flowSet}} or
\code{\link[flowWorkspace:GatingSet-class]{GatingSet}}.}

\item{...}{additional method-specific arguments.}
}
\description{
Manually draw gates around populations for analysis of flow cytometry data.
}
\details{
\code{cyto_gate_draw} is a convenient wrapper for the gating functions
shipped with \code{CytoExploreR} to facilitate analysis of flow cytometry by
gate drawing. Using \code{cyto_gate_draw} users can specify the type of
gate(s) to be constructed through the \code{type} argument and
\code{cyto_gate_draw} will automatically handle plotting the data and make
calls to the relevant gating function(s) to construct the gates around
populations of interest. \code{cyto_gate_draw} has methods for
\code{\link[flowCore:flowFrame-class]{flowFrame}},
\code{\link[flowCore:flowSet-class]{flowSet}} and
\code{\link[flowWorkspace:GatingSet-class]{GatingSet}} objects, refer to
their respective help pages for more information. The flowFrame and flowSet
methods simply return the constructed gates as a list of
\code{\link[flowCore:filters-class]{filters}}, whilst the GatingSet method
automatically applies the constructed gates to the GatingSet and saves the
constructed gates in an \code{openCyto}
\code{\link[openCyto:gatingTemplate-class]{gatingTemplate}}for future use.
See \code{\link{cyto_gate_edit}} and \code{\link{cyto_gate_remove}} to
manipulate constructed gates and modify their entries in the gatingTemplate.
}
\seealso{
\code{\link{cyto_plot.flowFrame}}

\code{\link{cyto_gate_draw.flowFrame}}

\code{\link{cyto_gate_draw.flowSet}}

\code{\link{cyto_gate_draw.GatingSet}}
}
\author{
Dillon Hammill, \email{Dillon.Hammill@anu.edu.au}
}
