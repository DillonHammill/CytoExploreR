% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cyto_stats_compute-methods.R
\name{cyto_stats_compute.flowSet}
\alias{cyto_stats_compute.flowSet}
\title{Compute Statistics - flowSet Method}
\usage{
\method{cyto_stats_compute}{flowSet}(x, channels = NULL, trans = NA,
  stat = "median", gate = NA, format = "long",
  density_smooth = 0.6, ...)
}
\arguments{
\item{x}{object of class \code{\link[flowCore:flowSet-class]{flowSet}}.}

\item{channels}{names of of channels for which statistic should be
calculated, set to all channels by default.}

\item{trans}{object of class
\code{\link[flowCore:transformList-class]{transformList}} or
\code{\link[flowWorkspace:transformerList]{transformerList}} generated by
\code{\link[flowCore:logicleTransform]{estimateLogicle}} used to transform
the fluorescent channels of x. The transformation list is required to apply
the inverse transformation such that the required statistics are returned
on the original linear scale.}

\item{stat}{name of the statistic to calculate, options include
\code{"count"}, \code{"freq"}, \code{"median"}, \code{"mode"},
\code{"mean"}, \code{"geo mean"} or \code{"CV"}.}

\item{gate}{object of class \code{rectangleGate}, \code{polygonGate} or
\code{ellipsoidGate} to apply to the flowFrame prior to calculation of
statistics. A \code{gate} object must be supplied to compute frequency
statistics.}

\item{format}{indicates whether the data should be returned in the
\code{"wide"} or \code{"long"} format, set to the \code{"long"} format by
default.}

\item{density_smooth}{smoothing parameter passed to
\code{\link[stats:density]{density}} when calculating mode, set to 1.5 by
default.}

\item{...}{not in use.}
}
\value{
a tibble containing the computed statistics in the wide or long
  format.
}
\description{
Calculate and export flow cytometry statistics for a flowSet.
}
\examples{
library(CytoRSuiteData)

# Load in samples
fs <- Activation

# Apply compensation
fs <- compensate(fs, fs[[1]]@description$SPILL)

# Transform fluorescent channels
trans <- estimateLogicle(fs[[32]], cyto_fluor_channels(fs))
fs <- transform(fs, trans)

# Compute statistics in long format - median
cyto_stats_compute(fs,
  channels = c("Alexa Fluor 488-A", "PE-A"),
  trans = trans,
  stat = "median",
  format = "long"
)

# Compute count statistics
cyto_stats_compute(fs,
  stat = "count",
)
}
\seealso{
\code{\link{cyto_stats_compute,flowFrame-method}}

\code{\link{cyto_stats_compute,GatingSet-method}}
}
\author{
Dillon Hammill, \email{Dillon.Hammill@anu.edu.au}
}
