% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cyto_map.R
\name{cyto_map}
\alias{cyto_map}
\title{Create dimension-reduced maps of cytometry data}
\usage{
cyto_map(
  x,
  parent = "root",
  select = NULL,
  channels = NULL,
  type = "UMAP",
  scale = "range",
  events = 1,
  label = NULL,
  merge_by = "all",
  nodes = NULL,
  seed = NULL,
  inverse = FALSE,
  trans = NA,
  plot = TRUE,
  ...
)
}
\arguments{
\item{x}{object of class \code{data.frame}, \code{matrix},
\code{\link[flowWorkspace:cytoframe]{cytoframe}},
\code{\link[flowWorkspace:cytoset]{cytoset}} or
\code{\link[flowWorkspace:GatingSet-class]{GatingSet}}.}

\item{parent}{name of the parent population to extract from the GatingSet for
mapping, set to the \code{"root"} node by default.}

\item{select}{passed to \code{cyto_select()} to control which samples are
passed to the dimension reduction algorithm, set to all samples by default.}

\item{channels}{names of the channels or markers to feed into the dimension
reduction algorithm, set to all channels with markers assigned by default.}

\item{type}{indicates the type of dimension reduction algorithm to apply to
the data, can be either supplied by name \code{e.g. "UMAP"} or as a
function \code{e.g. "uwot::umap"}. Natively supported options include:
\itemize{\item{"PCA"}{ uses rsvd::rpca() to compute principal
components}\item{"t-SNE"}{ uses python openTSNE or R Rtsne::Rtsne() to
compute t-SNE co-ordinates} \item{"FIt-SNE"}{ uses
\url{https://github.com/KlugerLab/FIt-SNE} to compute FIt-SNE co-ordinates
(some additional configuration required)}\item{"UMAP"}{ uses python
umap-learn or R uwot::umap() to compute UMAP
co-ordinates}\item{"EmbedSOM"}{ uses EmbedSOM::SOM() and
EmbedSOM::EmbedSOM() to compute EmbedSOM co-ordinates}\item{"PHATE"}{ uses
python phate to compute trajectory embedding
co-ordinates}\item{"PaCMAP"}{uses python pacmap to compute pairwise
controlled manifold approximation co-ordinates}\item{"TriMap"}{uses python
trimap.TRIMAP() to compute triplet constrained
co-ordinates}\item{"IsoMap"}{uses python sklearn.manifold.Isomap() to
compute non-linear isomapping co-ordinates}\item{"MDS"}{uses python
sklearn.manifold.MDS() or \code{stats::cmdscale()} to compute
multidimensional scaling co-ordinates}\item{kNN}{builds a k nearest
neighbours (kNN) graph using RANN::nn2() and uses igraph to compute the
layout co-ordinates for the graph}\item{sNN}{builds a shared nearest
neighbours (sNN) graph using HGC::SNN.construction() and igraph to compute
the layout co-ordinates for the graph}}}

\item{scale}{optional argument to scale each channel prior to computing
dimension-reduced co-ordinates, options include \code{"global"},
\code{"range"}, \code{"mean"}, \code{"median"} or \code{"zscore"}. Set to
\code{"global"} by default, scaling can be turned off by setting this
argument to FALSE. Global scaling preserves the structure of the data as
expected on the linear scale without having to apply inverse data
transformations to the entire dataset. Scaling is only required when some
channels have been transformed and \code{inverse = FALSE}.}

\item{events}{number or proportion of events to map, can optionally be
supplied per cytoframe for more fine control over how the data is sampled
prior to mapping. Set to 1 by default to map all events.}

\item{label}{optional label for new dimension-reduced parameters \code{e.g.
"UMAP"} to which the parameter indices will be appended \code{e.g. "UMAP-1"
and "UMAP-2"}.}

\item{merge_by}{passed to \code{cyto_merge_by} to control how samples should
be merged prior to performing dimension-reduction, set to \code{"all"} by
default to create a single dimension-reduced map for all samples.
Alternatively, a different dimension-reduced map will be created for each
group of samples merged by \code{cyto-merge_by}.}

\item{nodes}{a vector of population names representing descendant clustered
populations of the specified \code{parent}. If supplied, a vector of
cluster labels will be generated and passed to \code{Haisu} to provide
improved embedding using any of the natively supported non-linear dimension
reduction algorithms.}

\item{seed}{numeric passed to \code{cyto_data_extract} to ensure consistent
sampling between runs, set to NULL by default to off this feature.}

\item{inverse}{logical to indicate whether the data should be inverse
transformed prior to performing dimension reduction, set to FALSE by
default.}

\item{trans}{object of class \code{transformerList} containing the
transformation definitions applied to the supplied data. Used internally
when \code{inverse} is TRUE to inverse these transformations prior to apply
dimension reduction algorithm.}

\item{plot}{logical indicating whether a call should be made to
\code{cyto_plot_map} to visualise the produced dimension-reduced maps, set
to TRUE by default.}

\item{...}{additional arguments passed to the specified dimension reduction
algorithm}
}
\value{
either a \code{cytoset} or \code{GatingSet} with the
  dimension-reduced parameters added as additional channels in each of the
  underlying \code{cytoframes}.
}
\description{
\code{cyto_map} is a convenient wrapper function to produced
dimension-reduced maps o cytometry data using any available
dimension-reduction algorithm. \code{cyto_map} comes with native support for
PCA, t-SNE, FIt-SNE, UMAP and EmbedSOM. Simply supply the name of the
dimension reduction function to the \code{type} argument and additional
arguments directly to \code{cyto_map}. \code{cyto_map} takes care of merging
the data prior to generating the dimension-reduced maps and automatically
splits the data into the original samples for downstream analyses.
}
\seealso{
\code{\link{cyto_data_extract}}

\code{\link{cyto_save}}

\code{\link{cyto_plot_map}}
}
\author{
Dillon Hammill, \email{Dillon.Hammill@anu.edu.au}
}
